以下内容个人思考，欢迎老师/学长纠正
1、在我看来，单进程与多进程的最大区别在于单进程是顺序执行的，一个进程结束时另一个进程才开始。而多进程是并行执行的，可以进行进程的自由切换。后者更贴近生活的需求，因为这样效率会大大的增大，而数据的共享会更加频繁。但是同时，多进程处理的复杂度也是非常高的。可以说这也是所谓“折中”的一种体现了。
2、以下是我时间片修改前后的结果对比：
Process   Turnaround   Waiting   CPU Burst   I/O Burst
      0         5790        67           8           0
      1         7796         0           1        7795
      2           25         4          21           0
      3         3003         0           4        2999
      4         8161        60          54        8047
      5            2         0           2           0
      6            2         0           2           0
      7            2         0           2           0
      8          273         1          12         260
      9           55         0          55           0
     10          102         0         102           0
     11           23         0          23           0
     12           80         1          79           0
     13            2         0           2           0
     14            6         0           6           0
     15         2248      1543         705           0
     16         2232      1380         642         210
     17         2216      1206         594         416
     18         1857       610         300         947
     19         1284         2           0        1282
     20           61        60           1           0
     21            0         0           0           0
Average:     1600.91    224.27
Throughout: 0.27/s



Process   Turnaround   Waiting   CPU Burst   I/O Burst
      0         4795        67           8           0
      1           27         6           2          19
      2           19         0          19           0
      3         3009         4           6        2999
      4         5850       130          54        5666
      5            3         0           3           0
      6            3         0           3           0
      7            2         1           1           0
      8          273         1          14         258
      9           54         0          54           0
     10          102         0         102           0
     11           24         1          23           0
     12           79         1          78           0
     13            2         0           2           0
     14            6         1           5           0
     15          891       643         248           0
     16          860       612         248           0
     17          797       478         200         119
     18          827       284         188         355
     19          857         1           1         855
     20          126       125           1           0
     21            0         0           0           0
Average:      845.73    107.05
Throughout: 0.37/s

修改时间片，只需要修改#define INIT_TASK { 0,15,15 } //分别对应state;counter;和priority  里的counter和priority的值。counter是初始化值，priority是进程进行时时间片变动的跨度，所以priority数值变动对时间片影响是比较大的。sched.h文件中的priority数值我是从15变动到31，发生了如上程序运行的转变。
分析上面的变化，priority的优先级随数值增大优先级越高，也就是当进程阻塞时间越长，其优先程度越高。在一定程度内，平均等待时间，平均完成时间随时间片的增大时缩小的。这就是从log统计得到的思考。
进而思之，当超过一定范围的情况下，由于进程数目是不会变化的，参数将不会有明显的变化，吞吐量变化还有待思考。
